-------------------------------------------------------------------
## ANSIBLE Installation - Environment Ansible (config, version)
-------------------------------------------------------------------
=> Installation avec package des dépôts officiels des distributions

=> Installation en virtualenv Python : 
   => n virtualenv sur la même machine pour un même utilisateur
   => Utile pour tester une nouvelle version d'ansible sans impacter notre environnement actuel
   => Choix de version d'ansible

   => Commandes :
      $ sudo apt update
      $ sudo apt install python3-pip python3-venv
      # Creation du virtualenv :
      $ python3 -m venv /home/vagrant/ansible_venv_2.9
      # Activation du virtualenv :
      $ source /home/vagrant/ansible_venv_2.9/bin/activate
      # Installation dansible 2.9 via pip dans ce virtualenv
      $ pip3 install ansible==2.9
      # Check version:
      $ ansible --version
      # Installation du linter ansible (relecture de code)
      $ pip3 install ansible-lint


      # SI on souhaite quitter le venv :
      $ deactivate

----------------------------------------------------------------
## ANSIBLE Nouveau venv pour nouvelle version ANSIBLE
----------------------------------------------------------------
Recherche des release pip ansible :
https://pypi.org/project/ansible/#history

1°) Sortie du virtualenv actuel : 
$ deactivate
2°) Création d'un virtualenv python3 pour notre future version d'ansible
$ python3 -m venv /home/vagrant/ansible_venv_2.10.4
3°) Sourcing du nouveau venv
$ source /home/vagrant/ansible_venv_2.10.4/bin/activate
4°) Installation ansible via pip
$ pip3 install ansible==2.10.4




---------------------------------------
## ANSIBLE LINTER
--------------------------------------
=> Analyse de syntaxe : bonne pratiques, espaces en trop etc...
$ ansible-lint appliweb_playbook.yml

==> Possibilité de forcer la lint avant contribution GIT : hooks
    ANSIBLE ENI Chapitre 2, 6.3 Mécanisme de hook


# TAGS
$ ansible-playbook appliweb_playbook.yml --become --list-tasks

$ ansible-playbook appliweb_playbook.yml --become --tags=url_test
$ ansible-playbook appliweb_playbook.yml --become --skip-tags=url_test


# Inventaire - surcharge de variable

Analyser un inventaire :
=> Commande ansible-inventory :
   $ ansible-inventory -i inventaires/hosts --graph
   $ ansible-inventory -i inventaires/hosts --list

- Création d'un répertoire inventaires et d'un inventaire (fichier hosts)



----------------------------------------------
## FACT_CACHING
----------------------------------------------
https://docs.ansible.com/ansible/latest/plugins/cache.html
https://docs.ansible.com/ansible/2.5/plugins/cache.html
https://docs.ansible.com/ansible/2.4/intro_configuration.html#gathering



# Templating approfondi

-------------------------------------------------
## ANSIBLE DELEGATION
-------------------------------------------------
https://docs.ansible.com/ansible/latest/user_guide/playbooks_delegation.html

-------------------------------------------------
## ANSIBLE tasks asynchrones - wait_for
-------------------------------------------------
https://docs.ansible.com/ansible/latest/user_guide/playbooks_async.html
https://docs.ansible.com/ansible/latest/collections/ansible/builtin/wait_for_module.html


-------------------------------------------------
## ANSIBLE playbooks strategies
-------------------------------------------------
https://docs.ansible.com/ansible/latest/user_guide/playbooks_strategies.html


---------------------------------------------------
## ANSIBLE  Roles - Structure d'un projet ansible - Git
-----------------------------------------------------
=> Plateforme publique ansible pour les role, le collections (modules)
https://galaxy.ansible.com/

Ex d'utilisation: 
1°) Mon projet a un playbook qui utilise un rôle
2°) Les rôle n'étants pas versionnés dans le dépot de mon projet je dois les installer
    => Creation d'un fichier "requirements.yml" qui contiendra la liste des rôles nécessaire au projet
3°) Installation des rôles via ansible-galaxy :
    => ansible-galaxy install -p roles/ -r requirements.yml


Ex de création d'un role :
1°) Création du skeleton :
$ ansible-galaxy init roles/ansible_role_haproxy_1.0.0


---------------------------------------------------
## ANSIBLE Modules community
---------------------------------------------------
Ex : docker
=> il est possible que les modules souhaités ne soient pas dispo d'office dans notre install par défaut ansible
=> On peut installer la collection via ansible-galaxy :
   $ ansible-galaxy collection install community.general