---
- name: "PLAY1 | Deploiement des serveurs web"
  hosts: webservers
  gather_facts: True

  vars:
    pkg_apache: apache2
    #ma_variable2: "declarée dans le playbook"

  tasks:
    # Appel du module apt pour vérifier/installer le package apache2
    - name: "Installation package apache2"
      ansible.builtin.apt:
        name: "{{ pkg_apache }}"
        state: present
        update_cache: yes
      when: ansible_facts['os_family'] == "Debian"
    
    - name: "Deploiement du site"
      ansible.builtin.template:
        src: index.html.j2
        dest: /var/www/html/index.html
        owner: www-data
        group: www-data
        mode: '0644'

- name: "PLAY2 | Deploiement HAPROXY"
  hosts: haproxy

  vars:
    pkg_haproxy: haproxy

  tasks:

    # Appel du module yum pour vérifier/installer le package haproxy
    - name: "Installation haproxy"
      ansible.builtin.yum:
        name: "{{ pkg_haproxy }}"
        state: present
      tags:
       - haproxy
    
    # Appel du module template : fichiers dynamique qui se construit au travers de variables
    - name: "Configuration du haproxy"
      ansible.builtin.template:
        src: haproxy.cfg.j2
        dest: /etc/haproxy/haproxy.cfg
        owner: root
        group: root
        mode: '0640'
        # Utilisation du paramètre validate pour éviter la copie direct d'un fichier mal préparé
        validate: /usr/sbin/haproxy -c -f %s
      notify:
        - restart haproxy
      tags:
        - haproxy

    - name: "Creation d'un block pour utiliser le mode rescue"
      block:
        # Utilisation du module uri pour interroger le service web haproxy
        - name: "test url haproxy"
          uri: 
            url: "http://{{ ansible_ssh_host }}/index.html"
            return_content: yes
          # Utilisation directive register pour stocker le resultat du module uri
          register: output_uri
          tags:
           - url_test
           - haproxy
          failed_when: "'Consommation mémoire élevée' in output_uri.content"
          delegate_to: localhost
      rescue:
        # Execution si failed dans le bloxk
        - name: "passage dans mode rescue"
          debug:
            msg: "WARNING: Pb mémoire sur serveur web"


  handlers:
    - name: restart haproxy
      ansible.builtin.service:
        name: haproxy
        state: restarted
